# Generated by Django 4.2.14 on 2024-09-29 18:23

import cloudinary.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import eventtools.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GroupClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weekday', models.CharField(blank=True, choices=[('Mon', 'Monday'), ('Tue', 'Tuesday'), ('Wed', 'Wednesday'), ('Thu', 'Thursday'), ('Fri', 'Friday'), ('Sat', 'Saturday'), ('Sun', 'Sunday')], max_length=10, null=True)),
                ('start_time', models.CharField(blank=True, choices=[('7.30 am', '7.30'), ('9 am', '9.00'), ('10 am', '10.00'), ('11 am', '11.00'), ('1.05 pm', '13.05'), ('6 pm', '18.00'), ('6.30 pm', '18.30'), ('7.15 pm', '19.15'), ('7.30 pm', '19.30')], max_length=10, null=True)),
                ('duration_mins', models.IntegerField(choices=[(45, 45), (60, 60)], default=60)),
                ('location', models.CharField(choices=[('Studio 1', 'Studio 1'), ('Studio 2', 'Studio 2')], default='Studio 1', max_length=20)),
                ('image', cloudinary.models.CloudinaryField(blank=True, default='placeholder', max_length=255, verbose_name='image')),
                ('teacher', models.CharField(blank=True, choices=[('Mary Dawson', 'Mary Dawson'), ('Joanne West', 'Joanne West')], max_length=100, null=True)),
                ('teacher_bio', models.CharField(blank=True, choices=[('Mary is +500-hour qualified yoga teacher. She teaches yoga with an emphasis on safety and alignment. This offers students a supportive environment to explore their personal yoga practice. Mary began practising yoga in 2012. Her interest derived from the desire to balance out a busy lifestyle. Finding a new level of stillness, she is now on a mission to share the benefits of yoga with everyone! She will continue her mission by going to training and events to improve her teaching skills.', "Mary's bio"), ("Joanne's approach to teaching yoga is very much like her approach to life - full of curiosity, gentleness, and playfulness. 2014 was the beginning of her journey into a deeper understanding of herself, and this brought her to Goa, India, where she completed her 200hr Yoga teacher training in 2017, and returning again in 2018 to Rishikesh to complete 100 hours of Yin, breathwork and Meditation training. Joanne's teaching style is non-judgemental and focused on helping to foster the student's unique relationship with yoga and their own bodies. She uses the fluidity of vinyasa to help awaken and inspire this connection to ourselves and to the world around us.", "Joanne's bio")], max_length=3000, null=True)),
                ('first_class', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Group classes',
                'ordering': ['first_class__week_day', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='StyleDescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_class_description', models.CharField(blank=True, choices=[('Restorative yoga is a slow, gentle practice using props (bolsters, blankets and blocks) to prop the body up in poses allowing the whole body to enter and remain in a deeply relaxed state. An active rest practice, there is no muscle contraction in restorative yoga with practitioners relaxing fully in the stretch so that tension can slowly be released. Restorative yoga enhances flexibility, deeply relaxes the body and aids better sleep by stilling the mind.', 'Restorative description'), ('Yin Yoga is a perfect complement to the dynamic and muscular (yang) styles of yoga that emphasise internal heat, and the lengthening and contracting of our muscles. Yin Yoga generally targets the connective tissues of the hips, pelvis, and lower spine. While initially, this style of yoga can seem quite passive, or soft, yin practice can be quite challenging due to the longer duration of the poses. Yin and yang tissues respond quite differently to being exercised. You need to experience this to really know what Yin Yoga is all about. Not suitable for prenatal students.', 'Yin description'), ('Gentle Yoga Flow is a unique sequence of movements and postures which flow together creating heat in the body as well as peace of mind. It is particularly suitable to those seeking to improve their strength, flexibility, health and general well-being. Not suitable for prenatal students.', 'Gentle description'), ("The beginners' yoga class is a great way to start your yoga journey. Students will learn yogic breathing, yoga postures, and relaxation techniques. It is the perfect class to build a strong foundation for yourself. The beginners yoga class is there to help you feel safe and supported in your practice. This class will help you build strength and mobility as well as cultivate a calmer mind. Not suitable for prenatal students.", "Beginners' description"), ('This class is suitable for complete beginners and students who want to learn more about proper alignment in the poses. We spend more time instructing the poses and breathing techniques. The pace is gentle enough, but the class can still be challenging, helping you to build up strength. This is also a great option if you are low on energy, or if you are recovering from an injury and need to take it easy. Not suitable for prenatal students.', 'Flow 1 description'), ('You will need a yoga foundation, this class is for those improving their practice, but not for those who are new to yoga. Ideal for anyone who wishes to prevent common misalignment in poses, refine transitions and establish a solid foundation for a steady development of practice. A Level 2 class gives you the option for a more challenging poses with space for deep relaxation, flexibility work and strength work. Not suitable for complete beginners or prenatal students.', 'Flow 2 description'), ('The mixed-level class is designed to take you deeper into your practice by introducing asanas which will challenge you equally on strength and flexibility. Each class combines a dynamic Vinyasa practice with meditation, hands-on alignment and deep relaxation. Not suitable for complete beginners or prenatal students.', 'Flow Mixed description'), ('Make the most of your lunch break with an invigorating and rejuvenating midday yoga class to keep you going all day long. This class is designed as a yoga flow and moving meditation. Go back to your desk, children, errands or other daily activities with a clear mind and feeling energised! All levels are welcome. Not suitable for complete beginners or prenatal students.', 'Express description'), ('During pregnancy your body goes through many changes, which creates stress on you mentally and physically. A way to maintain a healthy mind and body is prenatal yoga. Prenatal yoga focuses on poses for pregnant women, in order to increase strength and flexibility. It also helps pregnant women to develop proper breathing and relaxation techniques for easier and more comfortable labor. This class is for prenatal women after 12 weeks/1st trimester without contra-indications.', 'Prenatal description')], max_length=5000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='YogaStyle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_class_style', models.CharField(blank=True, choices=[('Restorative Yoga', 'REST'), ('Yin Yoga', 'YIN'), ('Gentle Yoga', 'GENTLE'), ("Beginners' Yoga", 'BEGINNERS'), ('Yoga Flow Level 1', 'FLOW1'), ('Yoga Flow Level 2', 'FLOW2'), ('Yoga Flow Mixed Level', 'MIXED'), ('Express Lunchtime Yoga', 'EXPRESS'), ('Prenatal Yoga', 'PRENATAL')], max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SpecificGroupClass',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('specific_title', models.CharField(blank=True, max_length=30, null=True)),
                ('specific_datetime', models.DateTimeField(blank=True, null=True)),
                ('num_of_participants', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(2)])),
                ('participants_names', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Specific group classes',
                'ordering': ['-specific_datetime'],
            },
        ),
        migrations.CreateModel(
            name='RepeatedEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schedule.groupclass')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, eventtools.models.OccurrenceMixin),
        ),
        migrations.AddField(
            model_name='groupclass',
            name='description',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schedule.styledescription'),
        ),
        migrations.AddField(
            model_name='groupclass',
            name='participants',
            field=models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='groupclass',
            name='title',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='title', to='schedule.yogastyle'),
        ),
        migrations.CreateModel(
            name='EventOccurrence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField(db_index=True, verbose_name='start')),
                ('end', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='end')),
                ('repeat', eventtools.models.ChoiceTextField(blank=True, choices=[('RRULE:FREQ=DAILY', 'Daily'), ('RRULE:FREQ=WEEKLY', 'Weekly'), ('RRULE:FREQ=MONTHLY', 'Monthly'), ('RRULE:FREQ=YEARLY', 'Yearly')], default='', verbose_name='repeat')),
                ('repeat_until', models.DateField(blank=True, null=True, verbose_name='repeat_until')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schedule.repeatedevent')),
            ],
            options={
                'ordering': ('start', 'end'),
                'abstract': False,
            },
            bases=(models.Model, eventtools.models.OccurrenceMixin),
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('class_datetime', models.DateTimeField(blank=True, null=True)),
                ('booking_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('waiver_signed', models.BooleanField(blank=True, null=True)),
                ('booking_cancelled', models.BooleanField(default=False)),
                ('cancellation_reason', models.CharField(blank=True, choices=[('class full', 'class full'), ("client's decision", "client's decision")], max_length=20, null=True)),
                ('chosen_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schedule.groupclass')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-booking_time'],
            },
        ),
    ]
